// <auto-generated />
namespace DataAccessLayer.Entities
{
    using global::Entities;
    using System.Collections.Generic;
    using System.Diagnostics.CodeAnalysis;
    using System.Linq;
    using System.Xml.Serialization;

    [SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:ElementsMustBeDocumented", Justification = "Reviewed.")]
    [XmlType("Course")]
    [XmlInclude(typeof(Skill))]
    [XmlInclude(typeof(Material))]
    public class Course : BaseEntity
    {
        [XmlElement("Name")]
        public string Name { get; set; }

        [XmlElement("Description")]
        public string Description { get; set; }

        [XmlArray("SkillArray")]
        [XmlArrayItem("SkillObjekt")]
        public List<Skill> Skills { get; set; }

        [XmlArray("MaterialArray")]
        [XmlArrayItem("MaterialObjekt")]
        public List<Material> Materials { get; set; }

        public override string ToString()
        {
            return $"\nName: {this.Name}" +
                $"\nDescription: {this.Description}" +
                $"\nYou will acquire the following skills: { string.Join(",", this.Skills.Select(s => s.Name)) }" +
                $"\nThe course contains the following list of materials: { string.Join(",", this.Materials.Select(x => x.Name))}";
        }
    }

    [SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:ElementsMustBeDocumented", Justification = "Reviewed.")]
    public class CourseComparer : IEqualityComparer<Course>
    {
        public bool Equals([AllowNull] Course x, [AllowNull] Course y)
        {
            if (x != null && y != null)
            {
                return x.Id == y.Id;
            }

            return false;
        }

        public int GetHashCode([DisallowNull] Course obj)
        {
            return obj.Name.GetHashCode();
        }
    }
}
