// <auto-generated />
namespace EducationPortalConsoleApp.DependencyInjection
{
    using System;
    using BusinessLogicLayer.Interfaces;
    using DataAccessLayer.DataContext;
    using DataAccessLayer.Interfaces;
    using EducationPortal.PL.Controller;
    using EducationPortal.PL.Interfaces;
    using EducationPortalConsoleApp.Controller;
    using EducationPortalConsoleApp.Interfaces;
    using Microsoft.Extensions.DependencyInjection;
    using XmlDataBase.Interfaces;
    using XmlDataBase.Serialization;
    using EducationPortal.PL.Mapping;
    using EducationPortal.BLL.ServicesSql;
    using EducationPortal.DAL.DataContext;
    using Microsoft.EntityFrameworkCore;
    using Microsoft.Extensions.Configuration;
    using System.IO;
    using EducationPortal.BLL.Services;
    using EducationPortal.BLL.Interfaces;
    using EducationPortal.DAL.XML.Repositories;
    using EducationPortal.DAL.Repositories;
    using EducationPortal.Domain.Entities;
    using Microsoft.Extensions.Logging;
    using EducationPortal.PL.DependencyInjection;
    using EducationPortal.PL;
    using EducationPortal.PL.Helpers;

    public class Startup
    {
        static IConfiguration configuration;

        public Startup()
        {
            configuration = new ConfigurationBuilder()
            .SetBasePath(Directory.GetCurrentDirectory())
            .AddJsonFile("Config.json", optional: false, reloadOnChange: true)
            .Build();
        }

        public void ConfigureServices(IServiceCollection services)
        {
            services.AddTransient(typeof(IXmlSet<>), typeof(XmlSet<>));
            services.AddTransient(typeof(IXmlSerializeContext<>), typeof(XmlSerializationContextGeneric<>));
            services.AddTransient<IMapperService, Mapping>();
            services.AddTransient<IApplication, App>();

            // Repositories
            services.AddRepositories();
            services.AddDbContext<ApplicationContext>(options =>
                    options.UseSqlServer(configuration["ConnectionStrings:UserDBConnection"]), ServiceLifetime.Transient);

            // Services
            services.AddBusinessLogicServices();

            //ConsoleControllers
            services.AddConsoleAppControllers();
        }
    }
}
