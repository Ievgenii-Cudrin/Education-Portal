// <auto-generated />
namespace EducationPortalConsoleApp.DependencyInjection
{
    using System;
    using BusinessLogicLayer.Interfaces;
    using BusinessLogicLayer.Services;
    using DataAccessLayer.DataContext;
    using DataAccessLayer.Interfaces;
    using DataAccessLayer.Repositories;
    using EducationPortal.PL.Controller;
    using EducationPortal.PL.Interfaces;
    using EducationPortalConsoleApp.Controller;
    using EducationPortalConsoleApp.Interfaces;
    using EducationPortalConsoleApp.Services;
    using Microsoft.Extensions.DependencyInjection;
    using XmlDataBase.Interfaces;
    using XmlDataBase.Serialization;
    using EducationPortal.DAL.SQL;
    using EducationPortal.PL.Mapping;

    public static class Startup
    {
        public static IServiceProvider ConfigureService()
        {
            var provider = new ServiceCollection()
                .AddSingleton(typeof(IXmlSet<>), typeof(XmlSet<>))
                .AddSingleton(typeof(IXmlSerializeContext<>), typeof(XmlSerializationContextGeneric<>))
                .AddTransient(typeof(IRepository<>), typeof(Repository<>))
                //.AddTransient(typeof(IRepository)
                .AddTransient<IUserService, UserService>()
                .AddTransient<ICourseService, CourseService>()
                .AddTransient<IMaterialService, MaterialService>()
                .AddTransient<ISkillService, SkillService>()
                .AddTransient<IMaterialController, MaterialController>()
                .AddTransient<IUserController, UserController>()
                .AddTransient<ICourseController, CourseController>()
                .AddTransient<ISkillController, SkillController>()
                .AddTransient<IPassCourseController, PassCourseController>()
                .AddTransient<IMapperService, Mapping>()
                .BuildServiceProvider();

            return provider;
        }
    }
}
